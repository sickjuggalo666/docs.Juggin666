"use strict";(self.webpackChunkdocs_juggalodev_666=self.webpackChunkdocs_juggalodev_666||[]).push([[2631],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>u});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=o.createContext({}),f=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=f(e.components);return o.createElement(a.Provider,{value:n},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=f(t),g=i,u=p["".concat(a,".").concat(g)]||p[g]||y[g]||r;return t?o.createElement(u,s(s({ref:n},l),{},{components:t})):o.createElement(u,s({ref:n},l))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,s=new Array(r);s[0]=g;var c={};for(var a in n)hasOwnProperty.call(n,a)&&(c[a]=n[a]);c.originalType=e,c[p]="string"==typeof e?e:i,s[1]=c;for(var f=2;f<r;f++)s[f]=t[f];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},8897:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>y,frontMatter:()=>r,metadata:()=>c,toc:()=>f});var o=t(7462),i=(t(7294),t(3905));const r={sidebar_position:2},s="Config",c={unversionedId:"SickDirtyCops/Examples",id:"SickDirtyCops/Examples",title:"Config",description:"",source:"@site/docs/SickDirtyCops/Examples.md",sourceDirName:"SickDirtyCops",slug:"/SickDirtyCops/Examples",permalink:"/docs/SickDirtyCops/Examples",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/SickDirtyCops/Installation"},next:{title:"Pictures",permalink:"/docs/SickDirtyCops/Pictures"}},a={},f=[],l={toc:f},p="wrapper";function y(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"config"},"Config"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Config"',title:'"Config"'},"Config = {}\n\nConfig.MenuType = 'ox_libs'\n\nConfig.Price = 5000 -- price for checking cops AND making inventory\nConfig.TruckPrice = 5000 -- price to check info on the truck heist\nConfig.Inventory = 'ox'  -- for most part ox is now supported!!!!\nConfig.Target = 'ox_target'\nConfig.TruckUSB = 'greenusb'\nConfig.PoliceJobName = {\n    'police'\n}\nConfig.CashAccount = 'black_money'\nConfig.TruckAccount = 'black_money'\nConfig.NotificationType = { --['okokNotify' / 'mythic' / 'esx' / 'chat' / 'custom' ]\n    client = 'okokNotify', \n    server = 'okokNotify'\n}\n\nConfig.GreenDongle = 'greenusb' -- item needed to open the Menu\n\nConfig.InventoryOptions = { \n    inventoryType = \"inventory\",\n    inventorySubType = \"housing\",\n    inventoryLabel = \"drop_box\",\n    maxWeight = 100.0,\n    maxSlots = 10,\n    OxLabel = \"Drop Box\" -- If using ox inventory this matters if not its nothing\n}\n\nConfig.Peds = {\n    [1] = {\n        Name = \"Zeus Almighty\",\n        TargetName = 'illegal_shop1',\n        SpawnName = 'IG_RoccoPelosi',\n        location = vector4(-218.7603, 317.5758, 96.0402,230.7158),\n        OpenTime = 1, -- Open Time\n        CloseTime = 8, -- Closing Time\n    },\n}\n\nConfig.TruckInfo = {\n    TruckPrice = 5000,\n    TruckLocation = vector3(569.46, -3127.42, 18.77)\n}\n\nConfig.RobberyList = {\n    [1] = {\n        Header = \"Fleeca Banks\",\n        icon = 'fa-solid fa-bank',\n        minCops = 3,\n    },\n    [2] = {\n        Header = \"Store robbery\",\n        icon = 'fa-solid fa-store',\n        minCops = 1,\n    },\n    [3] = {\n        Header = \"Pacific Bank\",\n        icon = 'fa-solid fa-bank',\n        minCops = 3,\n    },\n    [4] = {\n        Header = \"House Robbery\",\n        icon = 'fa-solid fa-house',\n        minCops = 1,\n    },\n    [5] = {\n        Header = \"Truck Heist\",\n        icon = 'fa-solid fa-truck',\n        minCops = 2,\n    },\n}\n")),(0,i.kt)("h1",{id:"client"},"Client"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Notifications"',title:'"Notifications"'},"function Cnotify(noty_type, message)\n    if noty_type and message then\n        if Config.NotificationType.client == 'esx' then\n            ESX.ShowNotification(message)\n\n        elseif Config.NotificationType.client == 'okokNotify' then\n            if noty_type == 1 then\n                exports['okokNotify']:Alert(\"Dongle\", message, 10000, 'success')\n            elseif noty_type == 2 then\n                exports['okokNotify']:Alert(\"Dongle\", message, 10000, 'info')\n            elseif noty_type == 3 then\n                exports['okokNotify']:Alert(\"Dongle\", message, 10000, 'error')\n            end\n\n        elseif Config.NotificationType.client == 'mythic' then\n            if noty_type == 1 then\n                exports['mythic_notify']:SendAlert('success', message, { ['background-color'] = '#ffffff', ['color'] = '#000000' })\n            elseif noty_type == 2 then\n                exports['mythic_notify']:SendAlert('inform', message, { ['background-color'] = '#ffffff', ['color'] = '#000000' })\n            elseif noty_type == 3 then\n                exports['mythic_notify']:SendAlert('error', message, { ['background-color'] = '#ffffff', ['color'] = '#000000' })\n            end\n\n        elseif Config.NotificationType.client == 'chat' then\n            TriggerEvent('chatMessage', message)\n            \n        elseif Config.NotificationType.client == 'other' then\n            --add your own notification.\n            \n        end\n    end\nend\n")),(0,i.kt)("h1",{id:"server"},"Server"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Notifications"',title:'"Notifications"'},"function Snotify(source, noty_type, message)\n    if source and noty_type and message then\n        if Config.NotificationType.server == 'esx' then\n            TriggerClientEvent('esx:showNotification', source, message)\n        \n        elseif Config.NotificationType.server == 'okokNotify' then\n            if noty_type == 1 then\n                TriggerClientEvent('okokNotify:Alert', source, 'Dongle', message, 10000, 'success')\n            elseif noty_type == 2 then\n                TriggerClientEvent('okokNotify:Alert', source, 'Dongle', message, 10000, 'info')\n            elseif noty_type == 3 then\n                TriggerClientEvent('okokNotify:Alert', source, 'Dongle', message, 10000, 'error')\n            end\n\n        elseif Config.NotificationType.server == 'mythic' then\n            if noty_type == 1 then\n                TriggerClientEvent('mythic_notify:client:SendAlert', source, { type = 'success', text = message, style = { ['background-color'] = '#ffffff', ['color'] = '#000000' } })\n            elseif noty_type == 2 then\n                TriggerClientEvent('mythic_notify:client:SendAlert', source, { type = 'inform', text = message, style = { ['background-color'] = '#ffffff', ['color'] = '#000000' } })\n            elseif noty_type == 3 then\n                TriggerClientEvent('mythic_notify:client:SendAlert', source, { type = 'error', text = message, style = { ['background-color'] = '#ffffff', ['color'] = '#000000' } })\n            end\n\n        elseif Config.NotificationType.server == 'other' then\n            --add your own notification.\n\n        end\n    end\nend\n")))}y.isMDXComponent=!0}}]);